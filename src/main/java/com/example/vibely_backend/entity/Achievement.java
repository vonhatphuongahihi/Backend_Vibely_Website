package com.example.vibely_backend.entity;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.DBRef;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;

@Data
@NoArgsConstructor
@AllArgsConstructor
@Document(collection = "achievements")
public class Achievement {

    @Id
    private String id;

    @DBRef
    private User user;

    private AchievementType type;
    private int goalsCompleted;
    private LocalDateTime unlockedAt;
    private boolean isDisplayed;

    // T·∫°o ph∆∞∆°ng th·ª©c ·∫£o ƒë·ªÉ l·∫•y th√¥ng tin chi ti·∫øt v·ªÅ Achievement
    @Field("details")
    public AchievementDetails getDetails() {
        return ACHIEVEMENT_DETAILS.get(this.type);
    }

    // Enum lo·∫°i Achievement
    public enum AchievementType {
        ROOKIE, // T√¢n Binh
        TRAINEE, // T·∫≠p S·ª±
        WARRIOR, // Chi·∫øn Binh
        ELITE, // Tinh Anh
        MASTER, // Cao Th·ªß
        GODKING // Th·∫ßn V∆∞∆°ng
    }

    // Th√¥ng tin chi ti·∫øt v·ªÅ Achievement
    @Getter
    @Setter
    public static class AchievementDetails {
        private String title;
        private String description;
        private String icon;
        private String image;

        public AchievementDetails(String title, String description, String icon, String image) {
            this.title = title;
            this.description = description;
            this.icon = icon;
            this.image = image;
        }
    }

    // Th√¥ng tin chi ti·∫øt c·ªßa c√°c Achievement
    public static final Map<AchievementType, AchievementDetails> ACHIEVEMENT_DETAILS = new HashMap<>();

    static {
        ACHIEVEMENT_DETAILS.put(AchievementType.ROOKIE, new AchievementDetails("T√¢n Binh",
                "Ho√†n th√†nh m·ª•c ti√™u h·ªçc t·∫≠p ƒë·∫ßu ti√™n", "üå±", "/study-plant/badges/rookie.png"));
        ACHIEVEMENT_DETAILS.put(AchievementType.TRAINEE, new AchievementDetails("T·∫≠p S·ª±",
                "Ho√†n th√†nh 5 m·ª•c ti√™u h·ªçc t·∫≠p", "üìö", "/study-plant/badges/trainee.png"));
        ACHIEVEMENT_DETAILS.put(AchievementType.WARRIOR, new AchievementDetails("Chi·∫øn Binh",
                "Ho√†n th√†nh 10 m·ª•c ti√™u h·ªçc t·∫≠p", "‚öîÔ∏è", "/study-plant/badges/warrior.png"));
        ACHIEVEMENT_DETAILS.put(AchievementType.ELITE, new AchievementDetails("Tinh Anh",
                "Ho√†n th√†nh 20 m·ª•c ti√™u h·ªçc t·∫≠p", "üí´", "/study-plant/badges/elite.png"));
        ACHIEVEMENT_DETAILS.put(AchievementType.MASTER, new AchievementDetails("Cao Th·ªß",
                "Ho√†n th√†nh 50 m·ª•c ti√™u h·ªçc t·∫≠p", "üî•", "/study-plant/badges/master.png"));
        ACHIEVEMENT_DETAILS.put(AchievementType.GODKING, new AchievementDetails("Th·∫ßn V∆∞∆°ng",
                "Ho√†n th√†nh 100 m·ª•c ti√™u h·ªçc t·∫≠p", "üëë", "/study-plant/badges/godking.png"));
    }
}
